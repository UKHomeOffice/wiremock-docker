name: Nightly

on:
  schedule:
    - cron:  '0 0 * * *'

  workflow_dispatch:

jobs:

  docker-build-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        versions:
          - CONTEXT: .
            TAGS:
              - wiremock/wiremock:nightly
              - ghcr.io/wiremock/wiremock:nightly
            PLATFORMS:
              - linux/amd64
              - linux/arm64
              - linux/arm/v7
          - CONTEXT: alpine
            TAGS:
              - wiremock/wiremock:nightly-alpine
              - ghcr.io/wiremock/wiremock:nightly-alpine
            PLATFORMS:
              - linux/amd64
    steps:

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        if: ${{ matrix.versions.CONTEXT != 'alpine' }}
        with:
          image: tonistiigi/binfmt:latest
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Checkout sources
        uses: actions/checkout@main

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: wiremockbot
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: wiremock
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Wiremock Docker image
        uses: docker/build-push-action@v4
        with:
          context: ${{ matrix.versions.CONTEXT }}
          load: true
          file: ${{ matrix.versions.CONTEXT }}/Dockerfile-nightly
          tags: ${{ matrix.versions.TAGS[0] }}

      - name: Build Wiremock Docker image
        run: docker buildx build --tag ${{ matrix.versions.TAGS[0] }} --load ${{ matrix.versions.CONTEXT }} --file ${{ matrix.versions.CONTEXT }}/Dockerfile-nightly

      - name: Test Wiremock Docker image
        run: |
          # default
          docker container run -d --name test -p 8080:8080 ${{ matrix.versions.TAGS[0] }}
          timeout 10 bash -c 'while ! curl --fail http://localhost:8080/__admin/; do sleep 1; done'
          docker container rm -f test

          # args
          docker container run -d --name test -p 8443:8443 ${{ matrix.versions.TAGS[0] }} --https-port 8443
          timeout 10 bash -c 'while ! curl --fail --insecure https://localhost:8443/__admin/; do sleep 1; done'
          docker container rm -f test

          if [ "${{ matrix.versions.CONTEXT }}" != "alpine" ]
          then
            # helloworld
            docker buildx build --tag wiremock-hello --load samples/hello --file samples/hello/Dockerfile-nightly
            docker container run -d --name test -p 8080:8080 wiremock-hello
            timeout 10 bash -c 'while ! curl --fail http://localhost:8080/hello; do sleep 1; done'
            docker container rm -f test

            # random
            docker buildx build --tag wiremock-random --load samples/random --file samples/random/Dockerfile-nightly
            docker container run -d --name test -p 8080:8080 wiremock-random
            timeout 10 bash -c 'while ! curl --fail http://localhost:8080/random; do sleep 1; done'
            docker container rm -f test
          fi

      - name: Push Wiremock Docker image
        uses: docker/build-push-action@v4
        with:
          context: ${{ matrix.versions.CONTEXT }}
          platforms: ${{ join(matrix.versions.PLATFORMS, ',') }}
          push: true
          file: ${{ matrix.versions.CONTEXT }}/Dockerfile-nightly
          tags: ${{ join(matrix.versions.TAGS, ',') }}
